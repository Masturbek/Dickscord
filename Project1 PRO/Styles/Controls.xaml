<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Стиль для кнопки, который лишь отобразит контент, без заднего фона, выделения и прочего -->
    <Style x:Key="Button.Transparent" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent" Cursor="Hand">
                        <ContentPresenter Content="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 
        Некий стиль с анимацией.
        Его задача - анимировать контент кнопки при наведении мыши.
    -->
    <Style x:Key="Button.Animation" TargetType="Button" BasedOn="{StaticResource Button.Transparent}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To=".7" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
             </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation Duration="0" Storyboard.TargetProperty="Margin" To="0 1 0 -1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation Duration="0" Storyboard.TargetProperty="Margin" To="0 0 0 0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Border.Animation" TargetType="Border" >
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#FF3A3E44" Duration="0:0:0:0" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#FF36393F" Duration="0:0:0:0" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="Button.AnimationCircle" TargetType="Button" >
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.7" Duration="0:0:0:0.2" />
                        </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Применяем ко всем кнопкам без стилей анимации и делаем их без фона. -->
    <Style TargetType="Button" BasedOn="{StaticResource Button.Animation}"/>

    <!-- Стиль для кнопки "Войти". Раньше был отдельный контрол, но зачем, если можно сделать простой стиль. -->
    <Style x:Key="Button.Auth.Big" TargetType="Button" BasedOn="{StaticResource Button.Animation}">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Foreground" Value="#FFD7DDF2"/>
        <Setter Property="Background" Value="#FF697EC9"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Padding" Value="7"/>
        <Setter Property="Border.CornerRadius" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="{TemplateBinding Border.CornerRadius}" 
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            Cursor="Hand">
                        <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        <!--<TextBlock Margin="7,3.25,7,7" TextWrapping="Wrap" Text="Войти" TextAlignment="Center" FontWeight="Bold" FontSize="24" Foreground="#FFD7DDF2"/>-->
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для круглой кнопки. -->
    <Style x:Key="Button.Circle" TargetType="Button">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Foreground" Value="#FFD7DDF2"/>
        <Setter Property="Background" Value="#FF697EC9"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Padding" Value="7"/>
        <Setter Property="Border.CornerRadius" Value="500"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" CornerRadius="1000" 
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            Cursor="Hand">
                        <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="Button.CircleLeftGUI" TargetType="Button" >
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Foreground" Value="#FFD7DDF2"/>
        <Setter Property="Background" Value="#FF697EC9"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Padding" Value="7"/>
        <Setter Property="Border.CornerRadius" Value="500"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" CornerRadius="{TemplateBinding Border.CornerRadius}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            Cursor="Hand">
                        <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        <Border.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="CornerRadius">
                                                <ObjectAnimationUsingKeyFrames.KeyFrames>
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.03">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <CornerRadius BottomLeft="19" BottomRight="19" TopLeft="19" TopRight="19" />
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.06">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <CornerRadius BottomLeft="18" BottomRight="18" TopLeft="18" TopRight="18" />
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.09">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <CornerRadius BottomLeft="17" BottomRight="17" TopLeft="17" TopRight="17" />
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.1">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <CornerRadius BottomLeft="16" BottomRight="16" TopLeft="16" TopRight="16" />
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.12">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <CornerRadius BottomLeft="15" BottomRight="15" TopLeft="15" TopRight="15" />
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames.KeyFrames>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="CornerRadius">
                                                <ObjectAnimationUsingKeyFrames.KeyFrames>
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.03">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <CornerRadius BottomLeft="16" BottomRight="16" TopLeft="16" TopRight="16" />
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.06">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <CornerRadius BottomLeft="17" BottomRight="17" TopLeft="17" TopRight="17" />
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.09">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <CornerRadius BottomLeft="18" BottomRight="18" TopLeft="18" TopRight="18" />
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.1">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <CornerRadius BottomLeft="19" BottomRight="19" TopLeft="19" TopRight="19" />
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.12">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <CornerRadius BottomLeft="20" BottomRight="20" TopLeft="20" TopRight="20" />
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames.KeyFrames>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </Border.Triggers>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


  




    <Style x:Key="TextBox.Auth" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="#FF303339"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Foreground" Value="#FFCCCDCE"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Border.CornerRadius" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" Padding="5" CornerRadius="{TemplateBinding Border.CornerRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="GotFocus">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="#FF6473BE" Duration="0:0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="LostFocus">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="#FF000000" Duration="0:0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="ChatControl" TargetType="TextBox">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="#FF40444B" />
        <Setter Property="CaretBrush" Value="White"/>
        <Setter Property="Border.CornerRadius" Value="8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border CornerRadius="{TemplateBinding Border.CornerRadius}" Padding="2" BorderThickness="1" Background="#FF40444B">
                        <ScrollViewer Margin="0 0 0 0" VerticalAlignment="Center" x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>